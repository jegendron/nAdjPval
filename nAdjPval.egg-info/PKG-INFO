Metadata-Version: 2.1
Name: nAdjPval
Version: 1.0
Author: Jonathan Gendron
Author-email: jegendron@gmail.com
Description-Content-Type: text/markdown

# nAdjPval Package
In the face of the Large N problem, this package reports what your p-values would be if your sample was instead shrunk to $n = 100$. 

>BEWARE: This assumes that the mean and standard error are the same between your sample and the smaller sample.

As for how this package works, it takes your basic linear regression result as an input and prints a table with the new p-values that will attach to the bottom of your initial regression result.
- INPUT: Basic regression result
- <em> Optional </em> RETURN: Dataframe with the new p-values in one column, and the variable names in the other column

## Example

### Set Up
Here we're going to randomly generate a data with $n=10,000$ and run a basic linear regression

```python
import random
import pandas as pd
import numpy as np
import statsmodels.api as sm

# Randomly generate x1, x2 and y for our regression
np.random.seed(27)
x1 = pd.Series(np.random.randn(n))
np.random.seed(100)
x2 = pd.Series(np.random.randn(n))
np.random.seed(54)
y1 = pd.Series(np.random.randn(n))

# Run our regression
X1 = pd.DataFrame(index=range(len(x1)),columns=range(0))
X1['x'] = x1
X1['x2'] = x2
X1['constant'] = 1  
reg1 = sm.OLS(y1, X1).fit()

# Show our regression results
model1 = reg1.summary()
print(model1)
```

### Now let's adjust our p-values!
Now we're going to adjust our p-values
```python
# pip install nAdjPval
	# to install the library if necessary

from nAdjPval import nAdjPval

df = nAdjPval(reg1)
print(df)
```
>BEWARE: Do NOT drop the <em>from</em> syntax, it won't work!

## Details of How this Works

This is inspired by the methodology proposed in Good (1988) "The Interface between Statistics and Philosophy of Science", and does so as follows:

$$tScore_{new}=tScore_{orig}\cdot\frac{\sqrt{n_{100}}}{\sqrt{n_{original}}}$$

This new $tScore$ then gives a new $pValue$.
>This is incredibly valuable because you'll see that large sample sizes can immensely skew what the p-values are (compared to what they should be).
